var helpers = require("../../../../../../../../../.nvm/versions/node/v14.16.0/lib/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  var _react = require("react");
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _axios = require("axios");
  var _axiosDefault = _parcelHelpers.interopDefault(_axios);
  var _reactBootstrap = require("react-bootstrap");
  var _reactRouterDom = require("react-router-dom");
  require("./main-view.scss");
  var _loginViewLoginView = require("../login-view/login-view");
  var _registrationViewRegistrationView = require("../registration-view/registration-view");
  var _movieCardMovieCard = require("../movie-card/movie-card");
  var _movieViewMovieView = require("../movie-view/movie-view");
  var _directorViewDirectorView = require("../director-view/director-view");
  var _genreViewGenreView = require("../genre-view/genre-view");
  var _profileViewProfileView = require("../profile-view/profile-view");
  var _jsxFileName = "/Users/annespire/Desktop/Dev/CF/Full-Stack_Immersion/Achievement3/myFlix-client/src/components/main-view/main-view.jsx";
  class MainView extends _reactDefault.default.Component {
    // constructor is responsible for initializing this.state and creating component
    constructor() {
      super();
      // initialize state with movies array
      this.state = {
        movies: [],
        users: [],
        selectedMovie: null,
        user: null,
        registration: false
      };
    }
    componentDidMount() {
      let accessToken = localStorage.getItem("token");
      if (accessToken !== null) {
        this.setState({
          user: localStorage.getItem("user")
        });
        this.getMovies(accessToken);
      }
    }
    /*get movie data*/
    getMovies(token) {
      _axiosDefault.default.get("https://spiremyflix.herokuapp.com/movies", {
        headers: {
          Authorization: `Bearer ${token}`
        }
      }).then(response => {
        // Assign the result to the state
        this.setState({
          movies: response.data
        });
      }).catch(function (error) {
        console.log(error);
      });
    }
    getUsers(token) {
      _axiosDefault.default.get("https://spiremyflix.herokuapp.com/movies", {
        headers: {
          Authorization: `Bearer ${token}`
        }
      }).then(response => {
        // Assign the result to the state
        this.setState({
          movies: response.data
        });
      }).catch(function (error) {
        console.log(error);
      });
    }
    /*When a movie is clicked, this function is invoked and updates the
    state of the `selectedMovie` *property to that movie*/
    setSelectedMovie(movie) {
      this.setState({
        selectedMovie: movie
      });
    }
    /*When a user successfully logs in, this function updates the `user`
    property in state to that *particular user*/
    onLoggedIn(authData) {
      console.log(authData);
      this.setState({
        user: authData.user.Username
      });
      localStorage.setItem("token", authData.token);
      localStorage.setItem("user", authData.user.Username);
      this.getMovies(authData.token);
    }
    /*Log out user when the press logout button*/
    onLoggedOut() {
      localStorage.removeItem("token");
      localStorage.removeItem("user");
      this.setState({
        user: null
      });
    }
    /*When a user successfully registers, this function updates the `registration'
    property in state to true*/
    onRegister(registration) {
      this.setState({
        registration
      });
    }
    /*render returns visual representation of component*/
    render() {
      const {movies, selectedMovie, user, registration} = this.state;
      /*If the user has not registered the RegistrationView is rendered*/
      if (registration) return (
        /*#__PURE__*/_reactDefault.default.createElement(_registrationViewRegistrationView.RegistrationView, {
          onRegister: register => this.onRegister(register),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 120,
            columnNumber: 9
          }
        })
      );
      // if there is a selected movie show movieView else show movieCards
      return (
        /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.BrowserRouter, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 127,
            columnNumber: 7
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Navbar, {
          bg: "light",
          expand: "lg",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 128,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Navbar.Brand, {
          href: "/",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 129,
            columnNumber: 11
          }
        }, "      ", /*#__PURE__*/_reactDefault.default.createElement("img", {
          src: "../../assets/MyFlix.png",
          width: "30",
          height: "30",
          className: "d-inline-block align-top",
          alt: "myflix logo",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 129,
            columnNumber: 40
          }
        })), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Navbar.Toggle, {
          "aria-controls": "basic-navbar-nav",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 136,
            columnNumber: 11
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Navbar.Collapse, {
          id: "basic-navbar-nav",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 137,
            columnNumber: 11
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
          className: "ml-auto",
          to: "/user/:name",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 138,
            columnNumber: 13
          }
        }, "My Account"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Button, {
          className: "ml-auto",
          onClick: () => {
            this.onLoggedOut();
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 139,
            columnNumber: 13
          }
        }, "Logout"))), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Row, {
          className: "main-view justify-content-md-center",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 150,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          exact: true,
          path: "/",
          render: () => {
            if (!user) return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Col, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 157,
                  columnNumber: 19
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_loginViewLoginView.LoginView, {
                onLoggedIn: user => this.onLoggedIn(user),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 158,
                  columnNumber: 21
                }
              }))
            );
            return movies.map(m => /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Col, {
              md: 3,
              key: m._id,
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 162,
                columnNumber: 17
              }
            }, /*#__PURE__*/_reactDefault.default.createElement(_movieCardMovieCard.MovieCard, {
              movie: m,
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 163,
                columnNumber: 19
              }
            })));
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 151,
            columnNumber: 11
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/register",
          render: () => {
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Col, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 173,
                  columnNumber: 17
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_registrationViewRegistrationView.RegistrationView, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 174,
                  columnNumber: 19
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 169,
            columnNumber: 11
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/movies/:movieId",
          render: ({match, history}) => {
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Col, {
                md: 8,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 184,
                  columnNumber: 17
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_movieViewMovieView.MovieView, {
                movie: movies.find(m => m._id === match.params.movieId),
                onBackClick: () => history.goBack(),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 185,
                  columnNumber: 19
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 180,
            columnNumber: 11
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/genres/:name",
          render: ({match, history}) => {
            if (movies.length === 0) return (
              /*#__PURE__*/_reactDefault.default.createElement("div", {
                className: "main-view",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 197,
                  columnNumber: 47
                }
              })
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Col, {
                md: 8,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 199,
                  columnNumber: 17
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_genreViewGenreView.GenreView, {
                genre: movies.find(m => m.Genre.Name === match.params.name).Genre,
                onBackClick: () => history.goBack(),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 200,
                  columnNumber: 19
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 194,
            columnNumber: 11
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/directors/:name",
          render: ({match, history}) => {
            if (movies.length === 0) return (
              /*#__PURE__*/_reactDefault.default.createElement("div", {
                className: "main-view",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 215,
                  columnNumber: 47
                }
              })
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Col, {
                md: 8,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 217,
                  columnNumber: 17
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_directorViewDirectorView.DirectorView, {
                director: movies.find(m => m.Director.Name === match.params.name).Director,
                onBackClick: () => history.goBack(),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 218,
                  columnNumber: 19
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 212,
            columnNumber: 11
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/user/:name",
          render: ({match, history}) => {
            if (users.length === 0) return (
              /*#__PURE__*/_reactDefault.default.createElement("div", {
                className: "main-view",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 233,
                  columnNumber: 45
                }
              })
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Col, {
                md: 8,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 235,
                  columnNumber: 17
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_profileViewProfileView.ProfileView, {
                user: movies.find(m => m.Director.Name === match.params.name).Director,
                onBackClick: () => history.goBack(),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 236,
                  columnNumber: 17
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 230,
            columnNumber: 11
          }
        })))
      );
    }
  }
  exports.default = MainView;
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}

var helpers = require("../../../../../../../../../.nvm/versions/node/v14.16.0/lib/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _axios = require('axios');
  var _axiosDefault = _parcelHelpers.interopDefault(_axios);
  var _reactRedux = require('react-redux');
  var _reactRouterDom = require('react-router-dom');
  var _reactBootstrap = require('react-bootstrap');
  var _reactRouterBootstrap = require('react-router-bootstrap');
  var _actionsActions = require('../../actions/actions');
  var _moviesListMoviesList = require('../movies-list/movies-list');
  var _moviesListMoviesListDefault = _parcelHelpers.interopDefault(_moviesListMoviesList);
  var _loginViewLoginView = require('../login-view/login-view');
  var _registrationViewRegistrationView = require('../registration-view/registration-view');
  var _movieViewMovieView = require('../movie-view/movie-view');
  var _directorViewDirectorView = require('../director-view/director-view');
  var _genreViewGenreView = require('../genre-view/genre-view');
  var _profileViewProfileView = require('../profile-view/profile-view');
  require('./main-view.scss');
  var _urlAssetsImagesMyFlixPng = require('url:../../assets/images/MyFlix.png');
  var _urlAssetsImagesMyFlixPngDefault = _parcelHelpers.interopDefault(_urlAssetsImagesMyFlixPng);
  var _jsxFileName = "/Users/annespire/Desktop/Dev/CF/Full-Stack_Immersion/Achievement3/myFlix-client/src/components/main-view/main-view.jsx";
  // #2 export keyword removed from here
  class MainView extends _reactDefault.default.Component {
    // constructor is responsible for initializing this.state and creating component
    constructor() {
      super();
      // initialize state with movies array
      // #3 movies state removed from here
      this.state = {
        user: null
      };
    }
    /*Get Movie Data from API*/
    getMoviesData(token) {
      _axiosDefault.default.get('https://spiremyflix.herokuapp.com/movies', {
        headers: {
          Authorization: `Bearer ${token}`
        }
      }).then(response => {
        // Assign the result to the state
        // #4
        this.props.setMovies(response.data);
      }).catch(function (error) {
        console.log(error);
      });
    }
    /*store user and token in local storage and get movies with access token*/
    componentDidMount() {
      let accessToken = localStorage.getItem('token');
      if (accessToken !== null) {
        this.getMoviesData(accessToken);
      }
    }
    /*When a user successfully logs in, this function updates the `user`
    property in state to that *particular user*/
    onLoggedIn(authData) {
      this.setState({
        user: authData.user
      });
      this.props.setUser(authData.user);
      this.props.setFavorites(authData.user.FavoriteMovies);
      localStorage.setItem('token', authData.token);
      localStorage.setItem('user', authData.user.Username);
      this.getMoviesData(authData.token);
    }
    /*Log out user when the press logout button*/
    onLoggedOut() {
      localStorage.removeItem('token');
      localStorage.removeItem('user');
      this.props.setUser(null);
    }
    /*render returns visual representation of component*/
    render() {
      // #5 movies and user are extracted from this.props rather than from the this.state
      let {movies, user, favorites} = this.props;
      return (
        /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.BrowserRouter, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 87,
            columnNumber: 13
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Navbar, {
          bg: "light",
          expand: "lg",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 88,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Navbar.Brand, {
          href: "/",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 89,
            columnNumber: 21
          }
        }, ' ', /*#__PURE__*/_reactDefault.default.createElement("img", {
          src: _urlAssetsImagesMyFlixPngDefault.default,
          width: "110",
          height: "110",
          className: "d-inline-block align-top",
          alt: "myflix logo",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 91,
            columnNumber: 25
          }
        })), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Navbar.Toggle, {
          "aria-controls": "basic-navbar-nav",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 99,
            columnNumber: 21
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Navbar.Collapse, {
          id: "basic-navbar-nav",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 100,
            columnNumber: 21
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactRouterBootstrap.LinkContainer, {
          className: "ml-auto",
          to: `/users/${user}`,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 101,
            columnNumber: 25
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Nav.Link, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 105,
            columnNumber: 29
          }
        }, "My Account")), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Button, {
          href: "/",
          className: "ml-auto",
          onClick: () => {
            this.onLoggedOut();
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 107,
            columnNumber: 25
          }
        }, "Logout"))), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Row, {
          className: "main-view justify-content-md-center",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 119,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          exact: true,
          path: "/",
          render: () => {
            if (!user) return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Col, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 126,
                  columnNumber: 37
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_loginViewLoginView.LoginView, {
                onLoggedIn: user => this.onLoggedIn(user),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 127,
                  columnNumber: 41
                }
              }))
            );
            if (movies.length === 0) return (
              /*#__PURE__*/_reactDefault.default.createElement("div", {
                className: "main-view",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 135,
                  columnNumber: 40
                }
              })
            );
            // #6
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_moviesListMoviesListDefault.default, {
                movies: movies,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 137,
                  columnNumber: 36
                }
              })
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 120,
            columnNumber: 21
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/register",
          render: () => {
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Col, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 145,
                  columnNumber: 33
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_registrationViewRegistrationView.RegistrationView, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 146,
                  columnNumber: 37
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 141,
            columnNumber: 21
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/movies/:movieId",
          render: ({match, history}) => {
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Col, {
                md: 8,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 156,
                  columnNumber: 33
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_movieViewMovieView.MovieView, {
                user: user,
                movie: movies.find(m => m._id === match.params.movieId),
                onBackClick: () => history.goBack(),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 157,
                  columnNumber: 37
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 152,
            columnNumber: 21
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/genres/:name",
          render: ({match, history}) => {
            if (movies.length === 0) return (
              /*#__PURE__*/_reactDefault.default.createElement("div", {
                className: "main-view",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 174,
                  columnNumber: 40
                }
              })
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Col, {
                md: 8,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 176,
                  columnNumber: 33
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_genreViewGenreView.GenreView, {
                genre: movies.find(m => m.Genre.Name === match.params.name).Genre,
                onBackClick: () => history.goBack(),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 177,
                  columnNumber: 37
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 170,
            columnNumber: 21
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/directors/:name",
          render: ({match, history}) => {
            if (movies.length === 0) return (
              /*#__PURE__*/_reactDefault.default.createElement("div", {
                className: "main-view",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 196,
                  columnNumber: 40
                }
              })
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Col, {
                md: 8,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 198,
                  columnNumber: 33
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_directorViewDirectorView.DirectorView, {
                director: movies.find(m => m.Director.Name === match.params.name).Director,
                onBackClick: () => history.goBack(),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 199,
                  columnNumber: 37
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 192,
            columnNumber: 21
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: `/users/${user}`,
          render: ({match, history}) => {
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Col, {
                md: 8,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 218,
                  columnNumber: 33
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_profileViewProfileView.ProfileView, {
                movies: movies,
                favorites: favorites,
                onBackClick: () => history.goBack(),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 219,
                  columnNumber: 37
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 214,
            columnNumber: 21
          }
        })))
      );
    }
  }
  /*#7 recieves redux state and uses it as props in component*/
  let mapStateToProps = state => {
    return {
      movies: state.movies,
      user: state.user,
      favorites: state.favorites
    };
  };
  exports.default = _reactRedux.connect(mapStateToProps, {
    setMovies: _actionsActions.setMovies,
    setUser: _actionsActions.setUser,
    setFavorites: _actionsActions.setFavorites
  })(MainView);
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
